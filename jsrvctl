#!/usr/bin/env bash

instance_name="$2"
oper="$1"
source /etc/jsrvctl/jsrvctl.profile
[ -z ${KILL_TIMEOUT} ] && export KILL_TIMEOUT=30

check_user() {
    if [ -z "${ADMINGROUPS}" ]; then
        echo "ADMINGROUPS environment variable is not set"
        exit 2
    else
        ADMINGROUPS=${ADMINGROUPS// /\\|}
        result=$(groups |grep -w ${ADMINGROUPS} |grep -v grep |wc -l)
        if [[ ${result} -eq  0 ]]; then
            echo "Your username '($(whoami))' must belong to '${ADMINGROUPS}' group to use this script. Please contact your system administrator."
            exit 3
        fi
    fi
    return 0
}

start_instance() {
    instance_name=$1
    if [ -f "/etc/jsrvctl/${instance_name}.profile" ]; then
        source /etc/jsrvctl/${instance_name}.profile
    else
        echo "Error: '/etc/jsrvctl/${instance_name}.profile' file not found."
        exit 13
    fi
    if [ -z $(id -u "${APPUSER}") ] >/dev/null 2>&1; then
        echo "Error: APPUSER ${APPUSER} does not exist."
        exit 14
    fi
    if [ $(ps -ef |grep java |grep -v grep |grep -v ant |grep "${PS_REGEX}" |wc -l) -ne 0 ]; then
        echo "'${instance_name}' is already started."
        exit 15
    fi
    echo "'${instance_name}' is being started..."
    sudo -u ${APPUSER} -E instance_name="${instance_name}" bash -c 'source /etc/jsrvctl/${instance_name}.profile; nohup "${STARTUP_CMD[@]}" >> /tmp/${instance_name}.log 2>> /tmp/${instance_name}.log &'
    sleep 1
    echo "'${instance_name}' was started."
    return 0
}

stop_instance() {
    instance_name=$1
    if [ -f "/etc/jsrvctl/${instance_name}.profile" ]; then
        source /etc/jsrvctl/${instance_name}.profile
    else
        echo "Error: '/etc/jsrvctl/${instance_name}.profile' file not found."
        exit 13
    fi
    if [ -z $(id -u "${APPUSER}") ] >/dev/null 2>&1; then
        echo "Error: APPUSER ${APPUSER} does not exist."
        exit 14
    fi
    echo "'${instance_name}' is being stopped..."
    sudo -u ${APPUSER} -E instance_name="${instance_name}" bash -c 'source /etc/jsrvctl/${instance_name}.profile; nohup "${SHUTDOWN_CMD[@]}" >> /tmp/${instance_name}.log 2>> /tmp/${instance_name}.log &'
    local i=0
    while [ $(ps -ef |grep java |grep -v grep |grep -v ant |grep "${PS_REGEX}" |wc -l) -ne 0 ]
    do
        sleep 1
        echo -n "$(ps -ef |grep java |grep -v grep |grep -v ant |grep "${PS_REGEX}" |wc -l)"
        let i=${i}+1
        if [[ ${i} -gt ${KILL_TIMEOUT} ]]; then
            echo " Can not stop!, killing '${instance_name}'..."
            local ipid=$(ps -ef |grep java |grep -v grep |grep -v ant |grep "${PS_REGEX}" |awk '{ print $2 }')
            sudo -u ${APPUSER} -E ipid="${ipid}" bash -c 'kill -9 ${ipid} >> /tmp/${instance_name}.log 2>> /tmp/${instance_name}.log'
        fi
    done
    echo "'${instance_name}' was stopped."
    if [ -f /usr/local/bin/${instance_name}.clean ]; then
        sudo -u ${APPUSER} -E instance_name="${instance_name}" bash -c '/usr/local/bin/${instance_name}.clean'
        echo "'${instance_name}' Cache and Temp files deleted."
    fi
    return 0
}

status_instance() {
    instance_name=$1
    if [ -f "/etc/jsrvctl/${instance_name}.profile" ]; then
        source /etc/jsrvctl/${instance_name}.profile
    else
        echo "Error: '/etc/jsrvctl/${instance_name}.profile' file not found."
        exit 13
    fi
    if [ $(ps -ef |grep java |grep -v grep |grep -v ant |grep "${PS_REGEX}" |wc -l) -gt 0 ]; then
        echo "'${instance_name}' is running. Process count is $(ps -ef |grep java |grep -v grep |grep -v ant |grep "${PS_REGEX}" |wc -l)"
    else
        echo "'${instance_name}' is not running."
    fi
    return 0
}

start() {
    if [[ "${instance_name}" == "all" ]]; then
        for instance_name in $(cat /etc/jsrvctl/instances |grep -v '^[[:blank:]]*#' |grep -v '^[[:blank:]]*$') 
        do
            start_instance ${instance_name}
        done
    else
        start_instance ${instance_name} 
    fi
    return 0
}

stop() {
    if [[ "${instance_name}" == "all" ]]; then
        for instance_name in $(cat /etc/jsrvctl/instances |grep -v '^[[:blank:]]*#' |grep -v '^[[:blank:]]*$')
        do
            stop_instance ${instance_name}
        done
    else
        stop_instance ${instance_name}
    fi
    return 0
}

status() {
    if [[ "${instance_name}" == "all" ]]; then
        for instance_name in $(cat /etc/jsrvctl/instances |grep -v '^[[:blank:]]*#' |grep -v '^[[:blank:]]*$')
        do
            status_instance ${instance_name}
        done
    else
        status_instance ${instance_name}
    fi
    return 0
}

show_help() {
	echo "Usage: $0 {start|stop|status} {instance_name|all}"
        echo "Help: $0 --help"
	exit 1 
}


check_user
case "${oper}" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    --help)
        show_help
        ;;
    *)
        echo "Unknown operation '${oper}'"  
        show_help
        ;;
esac
